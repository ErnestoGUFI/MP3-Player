{"ast":null,"code":"var _jsxFileName = \"/Users/ernestogf/custom-audio-player/src/components/CustomAudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './CustomAudioPlayer.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomAudioPlayer = ({\n  audioUrl\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Cargar metadatos del audio\n  useEffect(() => {\n    const audio = audioRef.current;\n    const handleLoadedMetadata = () => {\n      setDuration(audio.duration);\n      setIsLoading(false);\n    };\n    const handleTimeUpdate = () => {\n      setCurrentTime(audio.currentTime);\n    };\n    const handleEnded = () => {\n      setIsPlaying(false);\n      setCurrentTime(0);\n    };\n    if (audio) {\n      audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n      audio.addEventListener('timeupdate', handleTimeUpdate);\n      audio.addEventListener('ended', handleEnded);\n    }\n    return () => {\n      if (audio) {\n        audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n        audio.removeEventListener('timeupdate', handleTimeUpdate);\n        audio.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, []);\n\n  // Función para formatear tiempo en formato MM:SS\n  const formatTime = time => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Función para manejar play/pause\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n      setIsPlaying(false);\n    } else {\n      audio.play();\n      setIsPlaying(true);\n    }\n  };\n\n  // Función para manejar cambio de volumen\n  const handleVolumeChange = e => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    audioRef.current.volume = newVolume;\n  };\n\n  // Función para manejar cambio de posición en la pista\n  const handleSeek = e => {\n    const audio = audioRef.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const width = rect.width;\n    const newTime = clickX / width * duration;\n    audio.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-audio-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioUrl,\n      preload: \"metadata\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Cargando audio...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-pause-btn\",\n          onClick: togglePlayPause,\n          \"aria-label\": isPlaying ? 'Pausar' : 'Reproducir',\n          children: isPlaying ? '⏸️' : '▶️'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-display\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(currentTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          onClick: handleSeek,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${duration ? currentTime / duration * 100 : 0}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-display\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"volume-icon\",\n          children: \"\\uD83D\\uDD0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.1\",\n          value: volume,\n          onChange: handleVolumeChange,\n          className: \"volume-slider\",\n          \"aria-label\": \"Control de volumen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"volume-value\",\n          children: [Math.round(volume * 100), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomAudioPlayer, \"QNeOwViabJhaAFwtgXM+YKRmyCY=\");\n_c = CustomAudioPlayer;\nexport default CustomAudioPlayer;\nvar _c;\n$RefreshReg$(_c, \"CustomAudioPlayer\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomAudioPlayer","audioUrl","_s","audioRef","isPlaying","setIsPlaying","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","isLoading","setIsLoading","audio","current","handleLoadedMetadata","handleTimeUpdate","handleEnded","addEventListener","removeEventListener","formatTime","time","isNaN","minutes","Math","floor","seconds","toString","padStart","togglePlayPause","pause","play","handleVolumeChange","e","newVolume","parseFloat","target","value","handleSeek","rect","currentTarget","getBoundingClientRect","clickX","clientX","left","width","newTime","className","children","ref","src","preload","style","display","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","min","max","step","onChange","round","_c","$RefreshReg$"],"sources":["/Users/ernestogf/custom-audio-player/src/components/CustomAudioPlayer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './CustomAudioPlayer.css';\n\nconst CustomAudioPlayer = ({ audioUrl }) => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Cargar metadatos del audio\n  useEffect(() => {\n    const audio = audioRef.current;\n    \n    const handleLoadedMetadata = () => {\n      setDuration(audio.duration);\n      setIsLoading(false);\n    };\n\n    const handleTimeUpdate = () => {\n      setCurrentTime(audio.currentTime);\n    };\n\n    const handleEnded = () => {\n      setIsPlaying(false);\n      setCurrentTime(0);\n    };\n\n    if (audio) {\n      audio.addEventListener('loadedmetadata', handleLoadedMetadata);\n      audio.addEventListener('timeupdate', handleTimeUpdate);\n      audio.addEventListener('ended', handleEnded);\n    }\n\n    return () => {\n      if (audio) {\n        audio.removeEventListener('loadedmetadata', handleLoadedMetadata);\n        audio.removeEventListener('timeupdate', handleTimeUpdate);\n        audio.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, []);\n\n  // Función para formatear tiempo en formato MM:SS\n  const formatTime = (time) => {\n    if (isNaN(time)) return '0:00';\n    const minutes = Math.floor(time / 60);\n    const seconds = Math.floor(time % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  // Función para manejar play/pause\n  const togglePlayPause = () => {\n    const audio = audioRef.current;\n    if (isPlaying) {\n      audio.pause();\n      setIsPlaying(false);\n    } else {\n      audio.play();\n      setIsPlaying(true);\n    }\n  };\n\n  // Función para manejar cambio de volumen\n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    audioRef.current.volume = newVolume;\n  };\n\n  // Función para manejar cambio de posición en la pista\n  const handleSeek = (e) => {\n    const audio = audioRef.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const clickX = e.clientX - rect.left;\n    const width = rect.width;\n    const newTime = (clickX / width) * duration;\n    \n    audio.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n\n  return (\n    <div className=\"custom-audio-player\">\n      {/* Audio element oculto */}\n      <audio\n        ref={audioRef}\n        src={audioUrl}\n        preload=\"metadata\"\n        style={{ display: 'none' }}\n      />\n      \n      {isLoading ? (\n        <div className=\"loading\">Cargando audio...</div>\n      ) : (\n        <>\n          {/* Controles principales */}\n          <div className=\"player-controls\">\n            <button \n              className=\"play-pause-btn\"\n              onClick={togglePlayPause}\n              aria-label={isPlaying ? 'Pausar' : 'Reproducir'}\n            >\n              {isPlaying ? '⏸️' : '▶️'}\n            </button>\n          </div>\n\n          {/* Barra de progreso */}\n          <div className=\"progress-container\">\n            <div className=\"time-display\">\n              <span>{formatTime(currentTime)}</span>\n            </div>\n            <div \n              className=\"progress-bar\"\n              onClick={handleSeek}\n            >\n              <div \n                className=\"progress-fill\"\n                style={{ width: `${duration ? (currentTime / duration) * 100 : 0}%` }}\n              />\n            </div>\n            <div className=\"time-display\">\n              <span>{formatTime(duration)}</span>\n            </div>\n          </div>\n\n          {/* Controles de volumen */}\n          <div className=\"volume-controls\">\n            <span className=\"volume-icon\">🔊</span>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"1\"\n              step=\"0.1\"\n              value={volume}\n              onChange={handleVolumeChange}\n              className=\"volume-slider\"\n              aria-label=\"Control de volumen\"\n            />\n            <span className=\"volume-value\">{Math.round(volume * 100)}%</span>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CustomAudioPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}